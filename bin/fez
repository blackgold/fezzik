#!/usr/bin/env ruby

require "rubygems"
require "rake"
require "colorize"
require "fezzik"

# TODO: Think about how to do domain overrides better

def usage
  <<-EOF
Version #{Fezzik::VERSION}
fez <destination> <tasks>  # Run deployment tasks on destination servers
fez get <tasks>            # Download tasks to use in your project
fez -T                     # Display all tasks
  EOF
end

def print_usage_and_exit
  puts usage
  exit 1
end

def display_tasks_and_exit
  Rake.application.init
  Rake.application.load_rakefile
  Rake.application.options.show_task_pattern = /^fezzik:/
  output = Fezzik::Util.capture_output { Rake.application.display_tasks_and_comments }
  output.gsub!(/^rake fezzik:/, "fez <destination> ")
  puts output
  exit 0
end

TASKS_URL = "https://raw.github.com/dmacdougall/fezzik/master/tasks"
def download_tasks_and_exit
  # TODO: Allow specifying where to download tasks to
  system("mkdir -p config/tasks")
  ARGV[1..-1].each do |task|
    task += ".rake" unless task =~ /\.rake$/
    system("curl -f #{TASKS_URL}/#{task} -o config/tasks/#{task} > /dev/null 2>&1")
    if $? == 0
      puts "    [new]".green + "  config/tasks/#{task}"
    else
      puts "    [fail]".red + " config/tasks/#{task}"
    end
  end
  exit 0
end

def run_fezzik_tasks
  ENV["fezzik_destination"] = ARGV[0]
  Rake.application.init
  Rake.application.load_rakefile
  Fezzik.init
  tasks = ARGV[1..-1]
  begin
    tasks.each do |task_with_params|
      task, params = Fezzik::Util.split_task_and_params(task_with_params)
      Rake::Task["fezzik:#{task}"].invoke(params)
    end
    puts "[success]".green
  rescue SystemExit, Rake::CommandFailedError => e
    puts "[fail]".red
    exit 1
  rescue StandardError => e
    puts e.message
    puts e.backtrace
    puts "[fail]".red
    fail
  end
end

case ARGV[0]
when nil then print_usage_and_exit
when "-T" then display_tasks_and_exit
when "get" then download_tasks_and_exit
else run_fezzik_tasks
end
